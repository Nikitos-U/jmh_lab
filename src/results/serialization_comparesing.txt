PROTOBUF SERIALIZATION
/Library/Java/JavaVirtualMachines/jdk-14.0.1.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57348:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/a18535673/Projects/jmh_lab/target/classes:/Users/a18535673/.m2/repository/org/openjdk/jmh/jmh-core/1.12/jmh-core-1.12.jar:/Users/a18535673/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/Users/a18535673/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/Users/a18535673/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar:/Users/a18535673/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/a18535673/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar:/Users/a18535673/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.12/jmh-generator-annprocess-1.12.jar:/Users/a18535673/.m2/repository/com/google/protobuf/protobuf-java/3.11.0/protobuf-java-3.11.0.jar:/Users/a18535673/.m2/repository/com/google/protobuf/protobuf-java-util/3.11.0/protobuf-java-util-3.11.0.jar:/Users/a18535673/.m2/repository/com/google/guava/guava/28.1-android/guava-28.1-android.jar:/Users/a18535673/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/a18535673/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/a18535673/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/a18535673/.m2/repository/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:/Users/a18535673/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/a18535673/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.18/animal-sniffer-annotations-1.18.jar:/Users/a18535673/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.3/error_prone_annotations-2.3.3.jar:/Users/a18535673/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar:/Users/a18535673/.m2/repository/com/googlecode/protobuf-java-format/protobuf-java-format/1.2/protobuf-java-format-1.2.jar protobufBenchmarks.ProtobufSerialization
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/Users/a18535673/.m2/repository/org/openjdk/jmh/jmh-core/1.12/jmh-core-1.12.jar) to field java.io.PrintStream.charOut
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH 1.12 (released 1704 days ago, please consider updating!)
# VM version: JDK 14.0.1, VM 14.0.1+7
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-14.0.1.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57348:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 1 s each
# Measurement: 7 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: protobufBenchmarks.ProtobufSerialization.protobufSerializationThroughput

# Run progress: 0,00% complete, ETA 00:00:24
# Fork: 1 of 1
# Warmup Iteration   1: 4078924,959 ops/s
# Warmup Iteration   2: 6922385,813 ops/s
# Warmup Iteration   3: 6989573,501 ops/s
# Warmup Iteration   4: 6604759,919 ops/s
# Warmup Iteration   5: 6094897,872 ops/s
Iteration   1: 6671599,973 ops/s
Iteration   2: 6798475,139 ops/s
Iteration   3: 6933147,833 ops/s
Iteration   4: 6546697,909 ops/s
Iteration   5: 6643376,658 ops/s
Iteration   6: 6755721,364 ops/s
Iteration   7: 4235608,277 ops/s


Result "protobufSerializationThroughput":
  6369232,450 ±(99.9%) 2137049,958 ops/s [Average]
  (min, avg, max) = (4235608,277, 6369232,450, 6933147,833), stdev = 948863,425
  CI (99.9%): [4232182,493, 8506282,408] (assumes normal distribution)


# JMH 1.12 (released 1704 days ago, please consider updating!)
# VM version: JDK 14.0.1, VM 14.0.1+7
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-14.0.1.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57348:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 1 s each
# Measurement: 7 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: protobufBenchmarks.ProtobufSerialization.protobufSerializationAvgTime

# Run progress: 50,00% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁶ s/op
# Warmup Iteration   3: ≈ 10⁻⁶ s/op
# Warmup Iteration   4: ≈ 10⁻⁶ s/op
# Warmup Iteration   5: ≈ 10⁻⁶ s/op
Iteration   1: ≈ 10⁻⁶ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op
Iteration   4: ≈ 10⁻⁶ s/op
Iteration   5: ≈ 10⁻⁶ s/op
Iteration   6: ≈ 10⁻⁶ s/op
Iteration   7: ≈ 10⁻⁶ s/op


Result "protobufSerializationAvgTime":
  ≈ 10⁻⁶ s/op


# Run complete. Total time: 00:00:25

Benchmark                                                                  Mode  Cnt        Score         Error  Units
protobufBenchmarks.ProtobufSerialization.protobufSerializationThroughput  thrpt    7  6369232,450 ± 2137049,958  ops/s
protobufBenchmarks.ProtobufSerialization.protobufSerializationAvgTime      avgt    7       ≈ 10⁻⁶                 s/op

JSON SERIALIZATION

/Library/Java/JavaVirtualMachines/jdk-14.0.1.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57477:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/a18535673/Projects/jmh_lab/target/classes:/Users/a18535673/.m2/repository/org/openjdk/jmh/jmh-core/1.12/jmh-core-1.12.jar:/Users/a18535673/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar:/Users/a18535673/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar:/Users/a18535673/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.9/jackson-databind-2.9.9.jar:/Users/a18535673/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/a18535673/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.9/jackson-core-2.9.9.jar:/Users/a18535673/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.12/jmh-generator-annprocess-1.12.jar:/Users/a18535673/.m2/repository/com/google/protobuf/protobuf-java/3.11.0/protobuf-java-3.11.0.jar:/Users/a18535673/.m2/repository/com/google/protobuf/protobuf-java-util/3.11.0/protobuf-java-util-3.11.0.jar:/Users/a18535673/.m2/repository/com/google/guava/guava/28.1-android/guava-28.1-android.jar:/Users/a18535673/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/Users/a18535673/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/a18535673/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/a18535673/.m2/repository/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:/Users/a18535673/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/Users/a18535673/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.18/animal-sniffer-annotations-1.18.jar:/Users/a18535673/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.3/error_prone_annotations-2.3.3.jar:/Users/a18535673/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar:/Users/a18535673/.m2/repository/com/googlecode/protobuf-java-format/protobuf-java-format/1.2/protobuf-java-format-1.2.jar jsonBenchmarks.JsonDeserialization
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/Users/a18535673/.m2/repository/org/openjdk/jmh/jmh-core/1.12/jmh-core-1.12.jar) to field java.io.PrintStream.charOut
WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
# JMH 1.12 (released 1704 days ago, please consider updating!)
# VM version: JDK 14.0.1, VM 14.0.1+7
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-14.0.1.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57477:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 1 s each
# Measurement: 7 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: jsonBenchmarks.JsonDeserialization.deserializationThroughput

# Run progress: 0,00% complete, ETA 00:00:24
# Fork: 1 of 1
# Warmup Iteration   1: 8121598,615 ops/s
# Warmup Iteration   2: 11726188,563 ops/s
# Warmup Iteration   3: 12375222,709 ops/s
# Warmup Iteration   4: 13612030,141 ops/s
# Warmup Iteration   5: 13664208,547 ops/s
Iteration   1: 13711346,602 ops/s
Iteration   2: 13576759,386 ops/s
Iteration   3: 13680612,165 ops/s
Iteration   4: 13625774,046 ops/s
Iteration   5: 13478892,642 ops/s
Iteration   6: 13681802,885 ops/s
Iteration   7: 13746781,478 ops/s


Result "deserializationThroughput":
  13643138,458 ±(99.9%) 205553,115 ops/s [Average]
  (min, avg, max) = (13478892,642, 13643138,458, 13746781,478), stdev = 91266,857
  CI (99.9%): [13437585,342, 13848691,573] (assumes normal distribution)


# JMH 1.12 (released 1704 days ago, please consider updating!)
# VM version: JDK 14.0.1, VM 14.0.1+7
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-14.0.1.jdk/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=57477:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 1 s each
# Measurement: 7 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: jsonBenchmarks.JsonDeserialization.deserializationAvgTime

# Run progress: 50,00% complete, ETA 00:00:12
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁶ s/op
# Warmup Iteration   2: ≈ 10⁻⁷ s/op
# Warmup Iteration   3: ≈ 10⁻⁷ s/op
# Warmup Iteration   4: ≈ 10⁻⁷ s/op
# Warmup Iteration   5: ≈ 10⁻⁷ s/op
Iteration   1: ≈ 10⁻⁷ s/op
Iteration   2: ≈ 10⁻⁶ s/op
Iteration   3: ≈ 10⁻⁶ s/op
Iteration   4: ≈ 10⁻⁶ s/op
Iteration   5: ≈ 10⁻⁷ s/op
Iteration   6: ≈ 10⁻⁷ s/op
Iteration   7: ≈ 10⁻⁷ s/op


Result "deserializationAvgTime":
  ≈ 10⁻⁷ s/op


# Run complete. Total time: 00:00:25

Benchmark                                                      Mode  Cnt         Score        Error  Units
jsonBenchmarks.JsonDeserialization.deserializationThroughput  thrpt    7  13643138,458 ± 205553,115  ops/s
jsonBenchmarks.JsonDeserialization.deserializationAvgTime      avgt    7        ≈ 10⁻⁷                s/op

